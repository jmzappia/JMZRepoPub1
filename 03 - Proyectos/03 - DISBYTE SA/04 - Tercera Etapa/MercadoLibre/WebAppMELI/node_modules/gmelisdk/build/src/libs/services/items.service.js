"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFulFilmentInventory = exports.getItemDescription = exports.getItem = exports.getItemsSearch = exports.getItemsByUser = exports.deleteProduct = exports.publishItems = void 0;
const apiResources_1 = require("../api/apiResources");
const endpoints_1 = require("../api/endpoints");
const httpRequest_1 = require("../httpRequest");
const queryStringify = __importStar(require("querystringify"));
exports.publishItems = (token, item) => __awaiter(void 0, void 0, void 0, function* () {
    const options = {
        headers: {
            "Authorization": "Bearer " + token,
            "Content-Type": "application/json"
        },
        method: "POST",
        body: JSON.stringify(item)
    };
    const responseItems = yield httpRequest_1.request(endpoints_1.endPoints.api_root_url + apiResources_1.apiResources.items, options);
    const optionsDescription = {
        headers: {
            "Authorization": "Bearer " + token,
            "Content-Type": "application/json"
        },
        method: "PUT",
        body: JSON.stringify({
            "plain_text": item.description
        })
    };
    const responseDescription = yield httpRequest_1.request(endpoints_1.endPoints.api_root_url + apiResources_1.apiResources.items + "/" + responseItems.id + "/description?api_version=2", optionsDescription);
    responseItems["descriptionResponse"] = responseDescription;
    return responseItems;
});
exports.deleteProduct = (token, itemId) => __awaiter(void 0, void 0, void 0, function* () {
    const options = {
        headers: {
            "Authorization": "Bearer " + token,
            "Content-Type": "application/json"
        },
        method: "PUT",
        body: JSON.stringify({
            "status": "closed"
        })
    };
    const responseItems = yield httpRequest_1.request(endpoints_1.endPoints.api_root_url + apiResources_1.apiResources.items + "/" + itemId, options);
    const optionsDel = {
        headers: {
            "Authorization": "Bearer " + token,
            "Content-Type": "application/json"
        },
        method: "PUT",
        body: JSON.stringify({
            "deleted": "true"
        })
    };
    const responseItemsDel = yield httpRequest_1.request(endpoints_1.endPoints.api_root_url + apiResources_1.apiResources.items + "/" + itemId, optionsDel);
    return responseItemsDel;
});
exports.getItemsByUser = (token, query, userId) => __awaiter(void 0, void 0, void 0, function* () {
    const queryString = queryStringify.stringify(query, true);
    const options = {
        headers: {
            "Authorization": "Bearer " + token,
            "Content-Type": "application/json"
        }
    };
    console.log(endpoints_1.endPoints.api_root_url + apiResources_1.apiResources.users + "/" + userId + apiResources_1.apiResources.itemSearch + queryString, options);
    const responseItems = yield httpRequest_1.request(endpoints_1.endPoints.api_root_url + apiResources_1.apiResources.users + "/" + userId + apiResources_1.apiResources.itemSearch + queryString, options);
    return responseItems;
});
exports.getItemsSearch = (token, query, siteId) => __awaiter(void 0, void 0, void 0, function* () {
    const queryString = queryStringify.stringify(query, true);
    const options = {
        headers: {
            "Authorization": "Bearer " + token,
            "Content-Type": "application/json"
        }
    };
    const responseItems = yield httpRequest_1.request(endpoints_1.endPoints.api_root_url + apiResources_1.apiResources.sites + "/" + siteId + apiResources_1.apiResources.search + queryString, options);
    return responseItems;
});
exports.getItem = (token, itemId) => __awaiter(void 0, void 0, void 0, function* () {
    const options = {
        headers: {
            "Authorization": "Bearer " + token,
            "Content-Type": "application/json"
        }
    };
    const responseItems = yield httpRequest_1.request(endpoints_1.endPoints.api_root_url + apiResources_1.apiResources.items + "/" + itemId, options);
    return responseItems;
});
exports.getItemDescription = (token, itemId) => __awaiter(void 0, void 0, void 0, function* () {
    const options = {
        headers: {
            "Authorization": "Bearer " + token,
            "Content-Type": "application/json"
        }
    };
    const responseItems = yield httpRequest_1.request(endpoints_1.endPoints.api_root_url + apiResources_1.apiResources.items + "/" + itemId + "/description", options);
    return responseItems;
});
exports.getFulFilmentInventory = (token, itemId) => __awaiter(void 0, void 0, void 0, function* () {
    const options = {
        headers: {
            "Authorization": "Bearer " + token,
            "Content-Type": "application/json"
        }
    };
    const responseItems = yield httpRequest_1.request(endpoints_1.endPoints.api_root_url + apiResources_1.apiResources.items + "/" + itemId + "/description", options);
    return responseItems;
});
