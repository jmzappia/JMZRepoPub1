import { apiResources } from "../api/apiResources";
import { endPoints } from "../api/endpoints";
import { request } from "../httpRequest";
import { IItems, IPostItem } from "../interfaces/items";
import   * as queryStringify from "querystringify";
export const publishItems=async(token:string,item:IPostItem):Promise<IItems>=>{
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        },
        method:"POST",
        body:JSON.stringify(item)
    }
    const responseItems = await request(endPoints.api_root_url+apiResources.items,options)
    const optionsDescription = {
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        },
        method:"PUT",
        body:JSON.stringify({
            "plain_text": item.description
        })
    }
    const responseDescription = await request(endPoints.api_root_url+apiResources.items+"/"+responseItems.id+"/description?api_version=2",optionsDescription);
    responseItems["descriptionResponse"] = responseDescription
    
    return responseItems;
}
export const deleteProduct =async(token:string,itemId:any)=> {
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        },
        method:"PUT",
        body:JSON.stringify({
            "status": "closed"
            })
    }
    const responseItems = await request(endPoints.api_root_url+apiResources.items+"/"+itemId, options);
    const optionsDel={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        },
        method:"PUT",
        body:JSON.stringify({
                "deleted":"true"
            })
    }
    const responseItemsDel = await request(endPoints.api_root_url+apiResources.items+"/"+itemId, optionsDel);
    return responseItemsDel;
}
export const getItemsByUser=async (token:string, query:any, userId:number)=>{
    const queryString:string = queryStringify.stringify(query,true);
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        }
    }
    console.log(endPoints.api_root_url+apiResources.users+"/"+userId+apiResources.itemSearch+queryString, options);
    const responseItems = await request(endPoints.api_root_url+apiResources.users+"/"+userId+apiResources.itemSearch+queryString,options)
    return responseItems;
}
export const getItemsSearch=async (token:string, query:any, siteId:string)=>{
    const queryString:string = queryStringify.stringify(query,true);
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        }
    }
    const responseItems = await request(endPoints.api_root_url+apiResources.sites+"/"+siteId+apiResources.search+queryString,options)
    return responseItems;
}

export const getItem =async(token:string,itemId:string)=>{
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        }
    }
    const responseItems = await request(endPoints.api_root_url+apiResources.items+"/"+itemId,options)
    return responseItems;
}

 

export const getItemDescription =async(token:string,itemId:string)=>{
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        }
    }
    const responseItems = await request(endPoints.api_root_url+apiResources.items+"/"+itemId+"/description",options);
    return responseItems;
}

export const getFulFilmentInventory =async(token:string,itemId:string)=>{
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        }
    }
    const responseItems = await request(endPoints.api_root_url+apiResources.items+"/"+itemId+"/description",options);
    return responseItems;
}