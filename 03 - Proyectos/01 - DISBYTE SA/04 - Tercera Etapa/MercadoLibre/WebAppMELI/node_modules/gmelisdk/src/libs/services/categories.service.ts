import { apiResources } from "../api/apiResources";
import { endPoints } from "../api/endpoints";
import { request } from "../httpRequest";
import { IItems, IPostItem } from "../interfaces/items";
import   * as queryStringify from "querystringify";
import { IQuery } from "../interfaces/query.interface";
 

export const getCategories=async (token:string, query:any, siteId:string)=>{
    const queryString:string = queryStringify.stringify(query,true);
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        }
    }
    const responseItems = await request(endPoints.api_root_url+apiResources.sites+"/"+siteId+apiResources.categories+queryString,options);
    return responseItems;
}
export const getCategoriesAll=async (token:string,   siteId:string)=>{
     
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        }
    }

    const responseItems = await request(endPoints.api_root_url+apiResources.sites+"/"+siteId+apiResources.categories+"/all" ,options);
    return responseItems;
}
export const getCategory=async (token:string, categoriesId:string)=>{
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        }
    }
    console.log(endPoints.api_root_url+ apiResources.categories+"/"+categoriesId);
    

    const responseItems = await request(endPoints.api_root_url+ apiResources.categories+"/"+categoriesId,options);
    return responseItems;
}

export const getCategoryByProductName=async (token:string,siteId,query:IQuery,productName:string=undefined)=>{
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        }
    }
    if(productName)
        query.q = productName;
    const queryString:string = queryStringify.stringify(query,true);
    const responseItems = await request(endPoints.api_root_url+apiResources.sites+"/"+siteId+apiResources.discoverySearch+queryString,options);
    return responseItems;
}
export const getCategoryAttributes=async (token:string,categoryId)=> {
    const options={
        headers:{
            "Authorization":"Bearer "+token,
            "Content-Type":"application/json"
        }
    }
    const responseItems = await request(endPoints.api_root_url+apiResources.categories+"/"+categoryId+"/attributes",options);
    return responseItems;
}